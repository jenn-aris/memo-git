{"version":3,"sources":["data/list.js","components/Header/index.js","components/Commandes/index.js","components/Intro/index.js","App.js","index.js"],"names":["id","name","description","title","thumbnail","author","console","log","className","src","alt","commandes","data","outrolist","map","textoutro","key","commandList","command","introlist","textIntro","App","Header","Intro","Commandes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ddead24.chunk.js","sourcesContent":["export default {\n    title: 'Mémo commandes Git',\n    thumbnail: 'https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/e9c48659-10d7-49d6-88b2-ad98f62694bf/de5mvof-51e456b1-e5a0-47d7-a132-a242ef7212ba.png?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOiIsImlzcyI6InVybjphcHA6Iiwib2JqIjpbW3sicGF0aCI6IlwvZlwvZTljNDg2NTktMTBkNy00OWQ2LTg4YjItYWQ5OGY2MjY5NGJmXC9kZTVtdm9mLTUxZTQ1NmIxLWU1YTAtNDdkNy1hMTMyLWEyNDJlZjcyMTJiYS5wbmcifV1dLCJhdWQiOlsidXJuOnNlcnZpY2U6ZmlsZS5kb3dubG9hZCJdfQ.-WfZcBCBIp8U2-bN9Te7IMAiOn8Kx8b480ax3X35rrY',\n    author: 'Jennaris',\n    commandes: [\n      {\n        id: 1,\n        name: 'git status',\n        description: 'Affiche le statut de l’arbre de travail',\n        \n      },\n      {\n        id: 2,\n        name: 'git init Nom_Du_Projet',\n        description: 'Initialise git dans le dossier',\n      },\n      {\n        id: 3,\n        name: 'git add .',\n        description: 'Ajoute tous les fichiers à l’index',\n      },\n      {\n        id: 4,\n        name: 'git add nom_du_fichier',\n        description: 'Ajoute le fichier demandé à l’index',\n      },\n      {\n        id: 5,\n        name: 'git commit -m\"Nom_du_commit\"',\n        description: 'Enregistre les modifications dans le dépôt',\n      },\n      {\n        id: 6,\n        name: 'git remote add origin https://… ',\n        description: 'Pour ajouter un nouveau dépôt distant Git',\n      },\n      {\n        id: 7,\n        name: 'git push -u origin master',\n        description: 'Envoie tous les commits de la branche locale vers GitHub en créant la branche sur Github',\n      },\n      {\n        id: 8,\n        name: 'git clone https://…',\n        description: 'Clone le répertoire distant en local',\n      },\n      {\n        id: 9,\n        name: 'git clone ssh…',\n        description: 'Clone le répertoire distant en local sans avoir besoin de retaper mdp',\n      },\n      {\n        id: 10,\n        name: 'git branch',\n        description: 'Liste toutes les branches locales dans le dépôt courant',\n      },\n      {\n        id: 11,\n        name: 'git checkout Nom_de_branche',\n        description: 'Bascule sur la branche spécifiée et met à jour le répertoire de travail',\n      },\n      {\n        id: 12,\n        name: 'git checkout -b Nom_de_branche',\n        description: 'Bascule sur la branche spécifiée en la créant',\n      },\n      {\n        id: 13,\n        name: 'git config --global user.name \"nom\" ',\n        description: 'Définit le nom que vous voulez associer à toutes vos opérations de commit',\n      },\n      {\n        id: 14,\n        name: 'git config --global user.email \"adresse email\"',\n        description: 'Définit l\\'email que vous voulez associer à toutes vos opérations de commit',\n      },\n      {\n        id: 15,\n        name: 'git diff',\n        description: 'Montre les modifications de fichier qui ne sont pas encore indexées',\n      },\n      {\n        id: 16,\n        name: 'git diff --staged',\n        description: 'Montre les différences de fichier entre la version indexée et la dernière version',\n      },\n      {\n        id: 17,\n        name: 'it diff [premiere-branche]...[deuxieme-branche]',\n        description: 'Montre les différences de contenu entre deux branches',\n      },\n      {\n        id: 18,\n        name: 'git reset nom_du_fichier',\n        description: 'Enleve le fichier de l\\'index, mais conserve son contenu',\n      },\n      {\n        id: 19,\n        name: 'git merge nom_de_branche',\n        description: 'Combine dans la branche courante l\\'historique de la branche spécifiée',\n      },\n      {\n        id: 20,\n        name: 'git branch -d nom_de_branche',\n        description: 'Supprime la branche spécifiée',\n      },\n      {\n        id: 21,\n        name: 'git rm [fichier]',\n        description: 'Supprime le fichier du répertoire de travail et met à jour l\\'index',\n      },\n      {\n        id: 22,\n        name: 'git rm --cached [fichier]',\n        description: 'Supprime le fichier du système de suivi de version mais le préserve localement',\n      },\n      {\n        id: 23,\n        name: 'git mv [fichier-nom] [fichier-nouveau-nom]',\n        description: 'Renomme le fichier et prépare le changement pour un commit',\n      },\n      {\n        id: 24,\n        name: 'git log',\n        description: 'Montre l\\'historique des versions pour la branche courante',\n      },\n      {\n        id: 25,\n        name: 'git log --follow [fichier]',\n        description: 'Montre l\\'historique des versions, y compris les actions de renommage, pour le fichier spécifié',\n      },\n      {\n        id: 26,\n        name: 'git show [commit]',\n        description: 'Montre les modifications de métadonnées et de contenu inclues dans le commit spécifié',\n      },\n      {\n        id: 27,\n        name: 'git reset [commit]',\n        description: 'Annule tous les commits après [commit], en conservant les modifications localement',\n      },\n      {\n        id: 28,\n        name: 'git reset --hard [commit]',\n        description: 'Supprime tout l\\'historique et les modifications effectuées après le commit spécifié',\n      },\n      {\n        id: 29,\n        name: 'git fetch [nom-de-depot]',\n        description: 'Récupère tout l\\'historique du dépôt nommé',\n      },\n      {\n        id: 30,\n        name: 'git merge [nom-de-depot]/[branche]',\n        description: ' Fusionne la branche du dépôt dans la branche locale courante',\n      },\n      {\n        id: 31,\n        name: 'git pull',\n        description: 'Récupère tout l\\'historique du dépôt nommé et incorpore les modifications',\n      },\n      {\n        id: 32,\n        name: 'git remote -v',\n        description: 'Visualiser les serveurs distants que vous avez enregistrés. Spécifier -v, vous montre l’URL que Git a stockée pour chaque nom court.',\n      },\n      {\n        id: 33,\n        name: 'git remote rename ancien_nom_court nouveau_nom_court',\n        description: 'Renommer une référence',\n      },\n      {\n        id: 34,\n        name: 'git remote rm nom_court',\n        description: 'Retirer un dépôt distant',\n      },\n      {\n        id: 35,\n        name: 'git tag -a v1.4 -m \\'ma version 1.4',\n        description: 'Créer des étiquettes annotées',\n      },\n      {\n        id: 36,\n        name: 'git show v1.4 ',\n        description: 'Visualiser les données de l’étiquette à côté du commit qui a été marqué. Cette commande affiche le nom du créateur, la date de création de l’étiquette et le message d’annotation avant de montrer effectivement l’information de validation.',\n      },\n      {\n        id: 37,\n        name: 'git tag v1.4-lg',\n        description: 'Créer des étiquettes légères. Celles-ci se réduisent à stocker la somme de contrôle d’un commit dans un fichier, aucune autre information n’est conservée.',\n      },\n      {\n        id: 38,\n        name: 'git remote -v',\n        description: 'Visualiser les serveurs distants que vous avez enregistrés. Spécifier -v, vous montre l’URL que Git a stockée pour chaque nom court.',\n      },\n      {\n        id: 39,\n        name: 'git remote rename ancien_nom_court nouveau_nom_court',\n        description: 'Renommer une référence',\n      },\n      {\n        id: 40,\n        name: 'git remote rm nom_court',\n        description: 'Retirer un dépôt distant',\n      },\n      {\n        id: 41,\n        name: 'git tag -a v1.4 -m \\'ma version 1.4',\n        description: 'Créer des étiquettes annotées',\n      },\n      {\n        id: 42,\n        name: 'git show v1.4 ',\n        description: 'Visualiser les données de l’étiquette à côté du commit qui a été marqué. Cette commande affiche le nom du créateur, la date de création de l’étiquette et le message d’annotation avant de montrer effectivement l’information de validation.',\n      },\n      {\n        id: 43,\n        name: 'git tag v1.4-lg',\n        description: 'Créer des étiquettes légères. Celles-ci se réduisent à stocker la somme de contrôle d’un commit dans un fichier, aucune autre information n’est conservée.',\n      },\n    ],\n  \n    intro: [\n      'Je vous présente un petit mémo regroupant des commandes Git fortement utilisées pour de la gestion et le versioning de projets collaboratifs par une équipe de développement.',\n    ],\n    outro: [\n      'Les commandes ci-dessus ne répresentent qu\\'une infime partie du champ des commandes git possibles, surtout lorsqu\\'on tient compte de la combinaison des milliers d\\'options qui peuvent être associées à chacune d\\'elles.',\n      'J\\'éspère que ce mémo vous sera utile :-)',\n    ],\n  };","import React from 'react';\nimport data from '../../data/list';\n\nconst { title, thumbnail , author } = data;\nconsole.log('debug', title, thumbnail, author);\n\n// Un composant React est une fonction qui retourne\n// un élément React (=== le résultat de React.createElement())\nexport default () => (\n    <header className=\"header\">\n      <img\n        src={thumbnail}\n        alt={title}\n        className=\"header-image\"\n      />\n      <h2>par { author } </h2>\n    </header>\n);\n","import React from 'react';\nimport data from '/home/jennaris/Bureau/html/memo-git/src/data/list';\n\nconst { commandes , outro } = data;\n\nconst outrolist = outro.map((textoutro) => \n  <li key={textoutro} className=\"introTexte\">{textoutro}</li>\n);\nconst commandList = commandes.map(command => (\n  <li key={command.id} >    \n     <div className=\"commande\">\n      <div className=\"gitCommand\">\n        {command.name}\n      </div>\n     <br /><div className=\"commandDescription\">\n       {command.description}</div>\n     </div>\n  </li>\n));\n\nexport default () => (\n  <>\n  <div className=\"commandList\">\n    <ul>\n      {commandList}\n    </ul>\n  </div>\n\n  <div className=\"outro\">\n    <ul>\n        {outrolist}\n    </ul>\n  </div>\n  </>\n);\n","import React from 'react';\nimport data from '/home/jennaris/Bureau/html/memo-git/src/data/list';\n\nconst { intro } = data\n\nconst introlist = intro.map((textIntro) => \n  <li key={textIntro} className=\"introTexte\">{textIntro}</li>\n);\n\nexport default () => (\n    <div className=\"intro\">\n      <ul>\n          {introlist}\n      </ul>\n    </div>\n);","import React from 'react';\nimport Header from './components/Header';\n\nimport './App.css';\nimport Commandes from './components/Commandes';\nimport Intro from './components/Intro';\n\nfunction App() {\n  console.log (<App />)\n  return (\n    <div className=\"App\">\n     <Header />\n     <Intro />\n     <Commandes />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}